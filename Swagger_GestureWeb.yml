swagger: "2.0"
info:
  description: "This is a server."
  version: "1.0.0"
  title: "Swagger_GestureWeb"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: ""
  license:
    name: ""
    url: ""
host: ""
basePath: "/api"
tags:
- name: "user"
  description: "Operations about user"
- name: "experiment"
  description: "Everything about your experiments"
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      tags:
      - "user"
      summary: "Request authentication"
      description: "This method logs the user in."
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be logged in."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
  /experiment:
    post:
      tags:
      - "user"
      - "experiment"
      summary: "Create an experiment"
      description: "This method creates an experiment with the given parameters."
      operationId: "createExperiment"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Experiment object of the experiment that needs to be created."
        required: true
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Experiment"
        405:
          description: "Invalid input"
    get:
      tags:
      - "user"
      - "experiment"
      summary: "List the current user's experiments"
      description: "This method retrieves the whole list of experiments created by the user that is logged in."
      operationId: "listExperiments"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object whose experiments are to be listed."
        required: true
        schema:
          $ref: "#/definitions/Experiment"
      responses:
        405:
          description: "Invalid user"
  /experiment/{experimentId}:
    get:
      tags:
      - "user"
      summary: "Request authentication"
      description: "This method logs the user in."
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be logged in."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "user"
      summary: "Request authentication"
      description: "This method logs the user in."
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be logged in."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
    delete:
      tags:
      - "user"
      summary: "Request authentication"
      description: "This method logs the user in."
      operationId: "login"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User object that needs to be logged in."
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  Pet:
    type: "object"
    required:
    - "name"
    - "photoUrls"
    properties:
      id:
        type: "integer"
        format: "int64"
      category:
        $ref: "#/definitions/Category"
      name:
        type: "string"
        example: "doggie"
      photoUrls:
        type: "array"
        xml:
          name: "photoUrl"
          wrapped: true
        items:
          type: "string"
      tags:
        type: "array"
        xml:
          name: "tag"
          wrapped: true
        items:
          $ref: "#/definitions/Tag"
      status:
        type: "string"
        description: "pet status in the store"
        enum:
        - "available"
        - "pending"
        - "sold"
    xml:
      name: "Pet"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"